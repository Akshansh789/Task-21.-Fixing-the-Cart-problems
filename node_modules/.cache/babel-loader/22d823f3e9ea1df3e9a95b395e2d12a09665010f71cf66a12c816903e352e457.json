{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst inititalExpenseState = {\n  expenses: [],\n  totalExpense: 0\n};\nconst expenseSlice = createSlice({\n  name: \"expense\",\n  initialState: inititalExpenseState,\n  reducers: {\n    setExpenses(state, action) {\n      state.expenses = action.payload;\n    },\n    setTotalExpense(state, action) {\n      state.expenses = action.payload;\n    }\n  }\n});\nconst inititalThemeState = {\n  mode: false\n};\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState: inititalThemeState,\n  reducers: {\n    setMode(state) {\n      state.mode = !state.mode;\n    }\n  }\n});\nconst inititalAuthState = {\n  login: false,\n  token: localStorage.getItem(\"token\"),\n  isLoggedIn: localStorage.getItem(\"token\"),\n  profileInfo: {\n    myName: \"\",\n    myUrl: \"\"\n  }\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: inititalAuthState,\n  reducers: {\n    loginTrue(state) {\n      state.login = true;\n    },\n    loginFalse(state) {\n      state.login = false;\n    },\n    setToken(state, action) {\n      state.token = action.payload;\n    },\n    setIsloggedIn(state, action) {\n      state.isLoggedIn = action.payload;\n    },\n    setProfileInfo(state, action) {\n      state.profileInfo = action.payload;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    expense: expenseSlice.reducer,\n    authentication: authSlice.reducer,\n    theme: themeSlice.reducer\n  }\n});\nexport default store;\nexport const expenseActions = expenseSlice.actions;\nexport const authActions = authSlice.actions;\nexport const themeActions = themeSlice.actions;","map":{"version":3,"names":["configureStore","createSlice","inititalExpenseState","expenses","totalExpense","expenseSlice","name","initialState","reducers","setExpenses","state","action","payload","setTotalExpense","inititalThemeState","mode","themeSlice","setMode","inititalAuthState","login","token","localStorage","getItem","isLoggedIn","profileInfo","myName","myUrl","authSlice","loginTrue","loginFalse","setToken","setIsloggedIn","setProfileInfo","store","reducer","expense","authentication","theme","expenseActions","actions","authActions","themeActions"],"sources":["C:/Users/chaha/Downloads/Task 17. Adding Premium Features/src/Components/Store/index.js"],"sourcesContent":["\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst inititalExpenseState = { expenses: [],totalExpense:0 }\nconst expenseSlice = createSlice({\n    name: \"expense\",\n    initialState: inititalExpenseState,\n    reducers: {\n        setExpenses(state,action) {\n            state.expenses=action.payload;\n        },\n        setTotalExpense(state,action) {\n            state.expenses=action.payload;\n        }\n    }\n})\nconst inititalThemeState = { mode:false }\nconst themeSlice = createSlice({\n    name: \"theme\",\n    initialState: inititalThemeState,\n    reducers: {\n        setMode(state) {\n            state.mode=!state.mode;\n        }\n    }\n})\n\nconst inititalAuthState = {\n    login: false,\n    token: localStorage.getItem(\"token\"),\n    isLoggedIn: localStorage.getItem(\"token\"),\n    profileInfo:{ myName: \"\", myUrl: \"\" }\n}\nconst authSlice = createSlice({\n    name: \"authentication\",\n    initialState: inititalAuthState,\n    reducers: {\n        loginTrue(state) {\n            state.login = true;\n        },\n        loginFalse(state) {\n            state.login = false;\n        },\n        setToken(state, action) {\n            state.token = action.payload;\n        },\n        setIsloggedIn(state,action){\n            state.isLoggedIn=action.payload;\n        },\n        setProfileInfo(state,action){\n            state.profileInfo=action.payload;\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer: { expense: expenseSlice.reducer, authentication: authSlice.reducer, theme: themeSlice.reducer }\n});\n\nexport default store;\nexport const expenseActions = expenseSlice.actions;\nexport const authActions = authSlice.actions;\nexport const themeActions = themeSlice.actions;"],"mappings":"AACA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,oBAAoB,GAAG;EAAEC,QAAQ,EAAE,EAAE;EAACC,YAAY,EAAC;AAAE,CAAC;AAC5D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,oBAAoB;EAClCM,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAACC,MAAM,EAAE;MACtBD,KAAK,CAACP,QAAQ,GAACQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,eAAeA,CAACH,KAAK,EAACC,MAAM,EAAE;MAC1BD,KAAK,CAACP,QAAQ,GAACQ,MAAM,CAACC,OAAO;IACjC;EACJ;AACJ,CAAC,CAAC;AACF,MAAME,kBAAkB,GAAG;EAAEC,IAAI,EAAC;AAAM,CAAC;AACzC,MAAMC,UAAU,GAAGf,WAAW,CAAC;EAC3BK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEO,kBAAkB;EAChCN,QAAQ,EAAE;IACNS,OAAOA,CAACP,KAAK,EAAE;MACXA,KAAK,CAACK,IAAI,GAAC,CAACL,KAAK,CAACK,IAAI;IAC1B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMG,iBAAiB,GAAG;EACtBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,UAAU,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzCE,WAAW,EAAC;IAAEC,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG;AACxC,CAAC;AACD,MAAMC,SAAS,GAAG1B,WAAW,CAAC;EAC1BK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEW,iBAAiB;EAC/BV,QAAQ,EAAE;IACNoB,SAASA,CAAClB,KAAK,EAAE;MACbA,KAAK,CAACS,KAAK,GAAG,IAAI;IACtB,CAAC;IACDU,UAAUA,CAACnB,KAAK,EAAE;MACdA,KAAK,CAACS,KAAK,GAAG,KAAK;IACvB,CAAC;IACDW,QAAQA,CAACpB,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACU,KAAK,GAAGT,MAAM,CAACC,OAAO;IAChC,CAAC;IACDmB,aAAaA,CAACrB,KAAK,EAACC,MAAM,EAAC;MACvBD,KAAK,CAACa,UAAU,GAACZ,MAAM,CAACC,OAAO;IACnC,CAAC;IACDoB,cAAcA,CAACtB,KAAK,EAACC,MAAM,EAAC;MACxBD,KAAK,CAACc,WAAW,GAACb,MAAM,CAACC,OAAO;IACpC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMqB,KAAK,GAAGjC,cAAc,CAAC;EACzBkC,OAAO,EAAE;IAAEC,OAAO,EAAE9B,YAAY,CAAC6B,OAAO;IAAEE,cAAc,EAAET,SAAS,CAACO,OAAO;IAAEG,KAAK,EAAErB,UAAU,CAACkB;EAAQ;AAC3G,CAAC,CAAC;AAEF,eAAeD,KAAK;AACpB,OAAO,MAAMK,cAAc,GAAGjC,YAAY,CAACkC,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACY,OAAO;AAC5C,OAAO,MAAME,YAAY,GAAGzB,UAAU,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}